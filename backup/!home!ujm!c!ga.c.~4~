#include <stdlib.h>
#include <stdio.h>
#include <time.h>
//#include <mem.h>

#define TOWN_COUNT 15

#define POPULATION_COUNT 5000

#define CUT_LINE 500

// 突然変異を起こす確率
#define MUTATION_ODDS 0.05

#define STOP_COST 90

#define MAX_COST 20

#define PENALTY TOWN_COUNT * MAX_COST

int map[TOWN_COUNT][TOWN_COUNT] = {
   0,  0,  6, 10,  2, 10, 16, 17, 15, 15,  8,  6,  4, 18, 11,
   0,  0, 19, 12,  0, 12,  1,  3,  7, 19,  1, 10,  5, 14,  9,
   6, 19,  0, 12, 11, 19, 16,  1, 11, 15, 13, 14, 10, 19, 15,
  10, 12, 12,  0,  1, 12,  9,  8,  6,  4, 12,  3,  6,  4, 19,
   2,  0, 11,  1,  0, 11,  7,  0, 15, 12,  8,  6,  7,  2, 14,
  10, 12, 19, 12, 11,  0,  9,  9,  3,  6,  1, 10, 18,  5, 19,
  16,  1, 16,  9,  7,  9,  0, 10, 13, 13,  9,  5,  2, 13, 17,
  17,  3,  1,  8,  0,  9, 10,  0, 16,  8,  0, 18, 16,  0,  2,
  15,  7, 11,  6, 15,  3, 13, 16,  0,  2,  7, 15, 16, 18, 16,
  15, 19, 15,  4, 12,  6, 13,  8,  2,  0, 19,  8, 19,  1, 17,
   8,  1, 13, 12,  8,  1,  9,  0,  7, 19,  0, 15,  1, 15,  0,
   6, 10, 14,  3,  6, 10,  5, 18, 15,  8, 15,  0, 10,  1, 17,
   4,  5, 10,  6,  7, 18,  2, 16, 16, 19,  1, 10,  0, 15,  3,
  18, 14, 19,  4,  2,  5, 13,  0, 18,  1, 15,  1, 15,  0,  7,
  11,  9, 15, 19, 14, 19, 17,  2, 16, 17,  0, 17,  3,  7,  0,
};

typedef struct {
  int pathway[TOWN_COUNT];
  int cost;
} individual;

individual **population

int calculate_cost(individual *target) {
  int path_flag[TOWN_COUNT];
  int return_cost = 0;
  int i, j;

  for(i = 0; i < TOWN_COUNT; i++) {
    if(map[i][target->pathway[i]] == 0) {
      return_cost += PENALTY;
    } else {
      return_cost += map[i][target->pathway[i]];
    }
  }
  for(i = 0; i < TOWN_COUNT; i++) {
    path_flag[0] = 0;
    for(j = 0; j < TOWN_COUNT; j++) {
      if(i == target->pathway[j]) {
	path_flag[0] = 1;
      }
    }
    if(path_flag[0] == 0) {
      return_cost += PENALTY;
    }
  }

  // 繋がっていない都市があった場合、ペナルティを課す
  
}
