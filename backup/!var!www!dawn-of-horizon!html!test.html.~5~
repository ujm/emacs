<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<title>canvasのテスト</title>
<body>
<canvas id="myCanvas" width="100" height="100"></canvas>
<canvas id="sine" width="100" height="100"></canvas>
<script>
function drawLoopSquare() {
    /* Canvas要素の定義など */
    var cs  = document.getElementById('myCanvas');
    var ctx = cs.getContext('2d');
    var w = cs.width;
    var h = cs.height;
    var x = 0;

    /* 描画フロー */
    function render() {
        // Canvas全体をクリア
        ctx.clearRect(0, 0, w, h);

        // 要素を描画する
        ctx.beginPath();
        ctx.strokeRect(x, 0, 10, 10);

        // 要素を動かす
        // 四角形のx座標がCanvasの横幅を超えたら初期位置(x座標を0)へ
        // そうでなければ、x座標を1増やす
        if (x > cs.width) {
            x = 0;
        } else {
            x += 1;
        }

        // このrender関数を繰り返す
        // 下記どちらかを使った場合は、外側でrender()を実行する※1（もしくは即時実行）
        // setTimeout(render, 100);
        // requestAnimationFrame(render);
    }
    /* ※1 */
    // render();

    /* render()関数を繰り返す */
    /* setTimeout、requestAnimationFrameではなく、setIntervalを使う場合 */
    setInterval(render, 100);
}

function sine() {
    var cs  = document.getElementById('sine');
    var ctx = cs.getContext('2d');
    var w   = cs.width;
    var h   = cs.height;
    var x   = 0;
    var y   = 0;
    var deg = 0;
    var rad;

    (function render() {
        x   += 1;
        // 角度を増やす
        deg += 10;
        // 角度をラジアンに変換
        rad = deg * Math.PI / 180;
        // y座標をsinに
        y = Math.sin(rad) * 20;

        ctx.clearRect(0, 0, w, h);
        ctx.beginPath();
        ctx.strokeRect(x, y + 30, 10, 10);

        if (x > w) {
            x = 0;
        }

        requestAnimationFrame(render);
    })();
}

sine();
drawLoopSquare();
</script>
</body>
</html>
